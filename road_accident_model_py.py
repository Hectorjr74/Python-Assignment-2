# -*- coding: utf-8 -*-
"""road_accident_model.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l-ZsCJDqeM-2RTCFu1obn0ItMXHvWpUM
"""

import pickle
import pandas as pd
import statsmodels.api as sm

with open('accident_model.pkl', 'rb') as f:
    model = pickle.load(f)

hypothetical = pd.DataFrame({'const': 1, 'speed': 80, 'alcohol': 1, 'road_condition': 1,
                             'time_night': 1, 'helmet': 0, 'weather_bad': 1}, index=[0])
pred = model.predict(hypothetical)[0]
print(f"Predicted severity: {pred}")

import numpy as np
import pandas as pd
import statsmodels.api as sm
import matplotlib.pyplot as plt
import pickle

# Generate synthetic dataset (as described)
np.random.seed(42)
n_samples = 1000
speed = np.random.normal(60, 20, n_samples).clip(20, 120)
alcohol = np.random.binomial(1, 0.15, n_samples)
road_condition = np.random.binomial(1, 0.4, n_samples)
time_night = np.random.binomial(1, 0.3, n_samples)
helmet = np.random.binomial(1, 0.6, n_samples)
weather_bad = np.random.binomial(1, 0.25, n_samples)
noise = np.random.normal(0, 1, n_samples)
severity = (0.05 * speed + 2 * alcohol + 1.5 * road_condition + 1.2 * time_night - 1 * helmet + 1.8 * weather_bad + noise).clip(0, 10)

data = pd.DataFrame({
    'speed': speed, 'alcohol': alcohol, 'road_condition': road_condition,
    'time_night': time_night, 'helmet': helmet, 'weather_bad': weather_bad,
    'severity': severity
})

# View data
print(data.head())
print(data.describe())

# Fit model
X = sm.add_constant(data[['speed', 'alcohol', 'road_condition', 'time_night', 'helmet', 'weather_bad']])
y = data['severity']
model = sm.OLS(y, X).fit()
print(model.summary())

# Save model
with open('accident_model.pkl', 'wb') as f:
    pickle.dump(model, f)
print('Model saved!')

# Example prediction
hypothetical = pd.DataFrame({'const': 1, 'speed': 80, 'alcohol': 1, 'road_condition': 1,
                             'time_night': 1, 'helmet': 0, 'weather_bad': 1}, index=[0])
pred = model.predict(hypothetical)[0]
print(f'Predicted severity: {pred}')

# Plot
plt.scatter(data['speed'], data['severity'])
plt.xlabel('Speed (km/h)')
plt.ylabel('Severity Score')
plt.title('Road Accident Severity vs. Speed')
plt.savefig('severity_vs_speed.png')
plt.show()  # In notebook, this displays the plot